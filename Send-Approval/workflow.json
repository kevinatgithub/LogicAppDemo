{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Execute_Query": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "query": "SELECT * FROM [dbo].[ServiceInitiation] WHERE ServiceInitiationId = @{triggerBody()?['serviceInitiationId']}"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "sql-2",
                        "operationId": "executeQuery",
                        "serviceProviderId": "/serviceProviders/sql"
                    }
                },
                "runAfter": {}
            },
            "Execute_Query_2": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "query": "SELECT * FROM [dbo].[Users] WHERE UserId = @{variables('UserId')}"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "sql-2",
                        "operationId": "executeQuery",
                        "serviceProviderId": "/serviceProviders/sql"
                    }
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                }
            },
            "Initialize_variable": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "userId",
                            "type": "string",
                            "value": "@{outputs('Execute_Query')?['body'][0][0].UserId}"
                        }
                    ]
                },
                "runAfter": {
                    "Condition_2": [
                        "Succeeded"
                    ]
                }
            },
            "userName": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "userName",
                            "type": "string",
                            "value": "@{concat(variables('user').FirstName, ' ', variables('user').LastName)}"
                        }
                    ]
                },
                "runAfter": {
                    "user": [
                        "Succeeded"
                    ]
                }
            },
            "Initialize_variable_2": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "destination",
                            "type": "string",
                            "value": "@{outputs('Execute_Query')?['body'][0][0].Destination}"
                        }
                    ]
                },
                "runAfter": {
                    "Condition_2": [
                        "Succeeded"
                    ]
                }
            },
            "user": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "user",
                            "type": "object",
                            "value": "@outputs('Execute_Query_2')?['body'][0][0]"
                        }
                    ]
                },
                "runAfter": {
                    "Condition_3": [
                        "Succeeded"
                    ]
                }
            },
            "Condition_2": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "greater": [
                                "@length(variables('querySI')[0])",
                                0
                            ]
                        }
                    ]
                },
                "actions": {},
                "runAfter": {
                    "Initialize_variable_6": [
                        "Succeeded"
                    ]
                },
                "else": {
                    "actions": {
                        "Response": {
                            "type": "Response",
                            "kind": "http",
                            "inputs": {
                                "statusCode": 404,
                                "body": "SI record not found"
                            },
                            "runAfter": {}
                        }
                    }
                }
            },
            "Condition_3": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "not": {
                                "equals": [
                                    "@length(variables('queryUser')[0])",
                                    0
                                ]
                            }
                        }
                    ]
                },
                "actions": {
                    "Response_2": {
                        "type": "Response",
                        "kind": "http",
                        "inputs": {
                            "statusCode": 200
                        },
                        "runAfter": {}
                    }
                },
                "runAfter": {
                    "Initialize_variable_7": [
                        "Succeeded"
                    ]
                },
                "else": {
                    "actions": {
                        "Response_3": {
                            "type": "Response",
                            "kind": "http",
                            "inputs": {
                                "statusCode": 404,
                                "body": "User record not found"
                            },
                            "runAfter": {}
                        }
                    }
                }
            },
            "Initialize_variable_6": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "querySI",
                            "type": "array",
                            "value": "@outputs('Execute_Query')?['body']"
                        }
                    ]
                },
                "runAfter": {
                    "Execute_Query": [
                        "Succeeded"
                    ]
                }
            },
            "Initialize_variable_7": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "queryUser",
                            "type": "array",
                            "value": "@outputs('Execute_Query_2')?['body']"
                        }
                    ]
                },
                "runAfter": {
                    "Execute_Query_2": [
                        "Succeeded"
                    ]
                }
            },
            "approvalEmails": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "approvalEmails",
                            "type": "array",
                            "value": [
                                "kevinc@magenic.com",
                                "kdcainday@gmail.com"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "userName": [
                        "Succeeded"
                    ]
                }
            },
            "For_each": {
                "type": "Foreach",
                "foreach": "@variables('approvalEmails')",
                "actions": {
                    "HTTP": {
                        "type": "Http",
                        "inputs": {
                            "method": "POST",
                            "uri": "http://localhost:7071/api/Send-Approval-Handle-Response/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=OXHiIZ9r1gQ-bibohoUcan1NHGRM2_kdZ737APcJRnY",
                            "body": {
                                "serviceInitiationId": "@triggerBody()?['serviceInitiationId']",
                                "userId": "@variables('userId')",
                                "emailAddress": "@{items('For_each')}",
                                "message": "@{variables('message')}"
                            }
                        },
                        "runAfter": {
                            "Set_variable": [
                                "Succeeded"
                            ]
                        }
                    },
                    "Set_variable": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "emailAddress",
                            "value": "@{items('For_each')}"
                        },
                        "runAfter": {}
                    }
                },
                "runAfter": {
                    "emailAddress": [
                        "Succeeded"
                    ]
                }
            },
            "message": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "message",
                            "type": "string",
                            "value": "Service Initiation for @{variables('userName')} to @{variables('destination')} is waiting for your approval"
                        }
                    ]
                },
                "runAfter": {
                    "approvalEmails": [
                        "Succeeded"
                    ]
                }
            },
            "emailAddress": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "emailAddress",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "message": [
                        "Succeeded"
                    ]
                }
            }
        },
        "triggers": {
            "manual": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "serviceInitiationId": {
                                "type": "integer"
                            }
                        }
                    },
                    "method": "POST"
                }
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {}
    },
    "kind": "Stateful"
}